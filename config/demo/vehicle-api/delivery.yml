apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: vehicle-api
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    app.kubernetes.io/part-of: vehicle-api
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/language: maven-jdk-11
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: vehicle-api
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 2.7.3
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/service-intent-postgres
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"vehicle-api","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/language":"maven-jdk-11","apps.tanzu.vmware.com/workload-type":"web"},"name":"vehicle-api","namespace":"demo"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"11"}]},"env":[{"name":"JAVA_TOOL_OPTIONS","value":"-XX:ReservedCodeCacheSize=32M -Xss512k -Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP -Dfile.encoding=UTF-8"},{"name":"BPL_JVM_THREAD_COUNT","value":"28"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8081","prometheus.io/scrape":"true"}}],"resources":{"limits":{"memory":"256Mi"},"requests":{"memory":"256Mi"}},"serviceClaims":[{"name":"vehicle-db","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ResourceClaim","name":"vehicle-db"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/making/vehicle-api"}}}}
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
        services.conventions.apps.tanzu.vmware.com/postgres: postgresql/42.3.6
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: vehicle-api
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/language: maven-jdk-11
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: vehicle-api
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        services.conventions.apps.tanzu.vmware.com/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: vehicle-api
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ReservedCodeCacheSize=32M -Xss512k -Dfile.encoding="UTF-8" -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.health.probes.enabled="true" -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s" -Duser.country="JP" -Duser.language="ja" -Duser.timezone="Asia/Tokyo"
        - name: BPL_JVM_THREAD_COUNT
          value: "28"
        image: ghcr.io/making/supply-chain/vehicle-api-demo@sha256:8e0a4f9421b42d7b34037ad98d937ee5f5a52050b9426eb67bd9085fcf4006de
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources:
          limits:
            memory: 256Mi
          requests:
            memory: 256Mi
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

